@startuml

class Account {
  -accountNumber: int
  -balance: double
  -creationDate: Date
  -status: STATUS
  +getAccountNumber(): int
  +getBalance(): double
  +getCreationDate(): Date
  +getStatus(): STATUS
}

class CurrentAccount {
  -overdraft: double
  +getOverdraft(): double
}

class SavingsAccount {
  -interestRate: double
  +getInterestRate(): double
}

class Person {
  -nom: String
  -prenom: String
  -dateNaissance: Date
  -telephone: String
  -adresse: String
  +getNom(): String
  +getPrenom(): String
  +getDateNaissance(): Date
  +getTelephone(): String
  +getAdresse(): String
}

class Client extends Person {
  -code: int
  +getCode(): int
}

class Employee extends Person {
  -matricule: int
  -dateRecrutement: Date
  -email: String
  +getMatricule(): int
  +getDateRecrutement(): Date
  +getEmail(): String
}

class Mission {
  -code: int
  -nom: String
  -description: String
  +getCode(): int
  +getNom(): String
  +getDescription(): String
}

class MissionAssignment {
  -debutDate: Date
  -endDate: Date
  +getDebutDate(): Date
  +getEndDate(): Date
}

class Operation {
  -operationNumber: int
  -creationDate: Date
  -amount: double
  +getOperationNumber(): int
  +getCreationDate(): Date
  +getAmount(): double
}

class Agency {
  -code: int
  -name: String
  -address: String
  -phone: String
  +getCode(): int
  +getName(): String
  +getAddress(): String
  +getPhone(): String
}

class Transfer {
  -id: int
  -transfer_date: Date
}

class Simulation {
  -id: int
  -monthly_payment: double
  -borrowed_capital: double
  -monthly_payments_num: int
  -result: double
  +getId(): int
  +getMonthlyPayment(): double
  +getBorrowedCapital(): double
  +getMonthlyPaymentsNum(): int
  +getResult(): double
}

class Credit {
  -number: int
  -date: Date
  -amount: double
  -state: STATE
  -remarques: String
  -duration: String
  +getNumber(): int
  +getDate(): Date
  +getAmount(): double
  +getState(): STATE
  +getRemarques(): String
  +getDuration(): String
}

class Payment {
  -id: int
  -transaction_time: TIMESTAMP
  -type: OPERATIONTYPE
  +getId(): int
  +getTransaction_time(): TIMESTAMP
}

class SimpleOperation {
  -id: int
  -type: OPERATIONTYPE
  +getId(): int
}

Enum OPERATIONTYPE {
  PAYMENT
  WITHDRAWAL
  DEPOSIT
}

Enum STATUS {
  ACTIVE
  INACTIVE
}

Enum STATE {
  APPROVED
  PENDING
  DECLINED
}

Account <|-- CurrentAccount : extends
Account <|-- SavingsAccount : extends
Account "1" *-- "0..*" Operation
Account "1" *-- "0..*" Client
Account "1" *-- "0..*" Employee
Employee "1" *-- "0..*" Operation
Mission "1" *-- "0..*" Employee
MissionAssignment -- Mission : assigned to
MissionAssignment -- Employee : assigned employee
Agency "1" *-- "0..*" Account
Agency "1" *-- "0..*" Employee
Simulation "1" *-- "0..*" Client
Simulation "1" *-- "0..*" Employee
Credit "1" *-- "0..*" Employee
Credit "*" *-- "1" Client
Simulation "1" *-- "1" Credit
Agency -- Transfer : "1" *-- "0..*" Employee
Employee -- Transfer : "1" *-- "0..*" Agency
Operation <|-- Payment : extends
Operation <|-- SimpleOperation : extends
Payment "1" -- "1" Account: from
Payment "1" -- "1" Account: to
@enduml